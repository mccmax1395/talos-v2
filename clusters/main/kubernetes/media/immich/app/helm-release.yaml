apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
  namespace: immich
  annotations:
spec:
  interval: 15m
  chart:
    spec:
      chart: immich
      version: 19.0.12
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 5m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    resources:
      requests:
        cpu: 25m
        memory: 200Mi
      limits:
        cpu: 500m
        memory: 500Mi
    ingress:
        main:
          enabled: true
          ingressClassName: internal
          # annotations:
          #   nginx.ingress.kubernetes.io/auth-method: 'GET'
          #   nginx.ingress.kubernetes.io/auth-url: 'http://authelia.authelia.svc.cluster.local:9091/api/verify'
          #   nginx.ingress.kubernetes.io/auth-signin:  "https://auth.${DOMAIN_0}/sso/OID/start/authelia?rd=$scheme://$host$request_uri"
          #   nginx.ingress.kubernetes.io/auth-response-headers: 'Remote-User,Remote-Name,Remote-Groups,Remote-Email'
          integrations:
            traefik:
              enabled: false
            certManager:
              enabled: true
              certificateIssuer: domain-0-le-prod
            # homepage:
            #   enabled: true
            #   group: Tools
            #   widget:
            #     enabled: false
          hosts:
            - host: immich.${DOMAIN_0}
              paths:
                - path: /
                  pathType: Prefix
    immich:
      enable_ml: false
    # service:
    #   main:
    #     type: LoadBalancer
    #     loadBalancerIP: ${IMMICH_IP}
    #     ports:
    #       main:
    #         port: 2283 # Default immich port
    #     annotations:
    #       metallb.universe.tf/allow-shared-ip: "true"
    persistence:
      thumbs:
        enabled: true
        type: nfs
        path: /mnt/playground/media/immich/thumbs
        mountPath: "/usr/src/app/upload/thumbs"
        server: 192.168.1.98
        targetSelector:
        # Main pod/container is server
          main:
            main: {}
          microservices:
            microservices: {}
      uploads:
        enabled: true
        type: nfs
        path: /mnt/playground/media/immich/uploads
        mountPath: /usr/src/app/upload/upload
        server: 192.168.1.98
        targetSelector:
          # Main pod/container is server
          main:
            main: {}
          microservices:
            microservices: {}
      library:
        enabled: true
        type: nfs
        path: /mnt/playground/media/immich/library
        mountPath: /usr/src/app/upload/library
        server: 192.168.1.98
        targetSelector:
          # Main pod/container is server
          main:
            main: {}
          microservices:
            microservices: {}
      backups:
        enabled: true
        type: nfs
        path: /mnt/playground/media/immich/backups
        mountPath: /usr/src/app/upload/backups
        server: 192.168.1.98
        targetSelector:
          # Main pod/container is server
          main:
            main: {}
          microservices:
            microservices: {}
      profile:
        enabled: true
        type: nfs
        path: /mnt/playground/media/immich/profile
        mountPath: /usr/src/app/upload/profile
        server: 192.168.1.98
        targetSelector:
          # Main pod/container is server
          main:
            main: {}
          microservices:
            microservices: {}
      video:
        enabled: true
        type: nfs
        path: /mnt/playground/media/immich/encoded-video
        mountPath: /usr/src/app/upload/encoded-video
        server: 192.168.1.98
        targetSelector:
          # Main pod/container is server
          main:
            main: {}
          microservices:
            microservices: {}